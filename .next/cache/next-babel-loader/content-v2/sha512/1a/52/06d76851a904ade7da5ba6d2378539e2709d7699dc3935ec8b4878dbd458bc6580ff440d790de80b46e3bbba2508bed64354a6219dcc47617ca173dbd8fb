{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { useEffect } from 'react';\n\nfunction HomePage(props) {\n  /*  No need to maintain state if we are using getStaticProps() for the data\r\n  const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n    useEffect(() => {\r\n      //send a http request and fetch data\r\n      setLoadedMeetups(DUMMY_MEETUPS);\r\n  },[]);\r\n    return <MeetupList meetups={loadedMeetups} />\r\n  */\n  return /*#__PURE__*/_jsx(MeetupList, {\n    meetups: props.meetups\n  });\n} //This is a special function defined in nextjs.\n//Nextjs will look for a function with exatcly this name,\n//it executes it during the pre-rendering process.\n//So it will not call your component  HomePAge() function directly,\n//and will not use the returned JSX html content, but\n//first will call getStaticProps() before that.\n//The job of this function is to prepare props for HomePage()\n//So data is loaded first, before the HomePage() is executed, \n//hence nextjs can render component with the required data.\n//Any code written here will not be executed on client side.\n//This code is executed during the built process, not on the server or client.\n//This way we can move data fetching away from the client to the build process.\n//Now if we inspect we will get data in list instead of empty.\n//Now data is not fecthed on second render cycle on the client,\n//but initially when the page is re-rendering during the built process\n//This is the key feature of NextJS i.e. data fetching for pre-rendering\n\n\nexport var __N_SSG = true;\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}